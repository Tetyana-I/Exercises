Part One: Solidify Terminology
In your own terms, define the following terms:
******************************************************************************

What is HTTP?
HTTP (Hypertext Transfer Protocol ) is a protocol or set of rules for how browsers and web-servers should communicate. 

What is a URL?
URL (Universal Resource Locator) - more comfortable for using by humans a unique address for a resource. 

What is DNS?
DNS (Domain name system) - a naming system for computers, services, or other resources connected to the Internet.

What is a query string?
This is additional information in a specific format that specify the browser's request.

What are two HTTP verbs and how are they different?
GET - method that retrieve the information from a server; doesn't have an any changing effects on server end;
POST - method that change information on the server side.

What is an HTTP request?
HTTP request is a request sent by a browser to a server that has a specific structure with components needed to access a resource on the Internet.  

What is an HTTP response?
HTTP response goes from a server to a browser to provide with a resource the browser requested or information why it's not possible.

What is an HTTP header? Give a couple examples of request and response headers you have seen.
HTTP headers contain an additional information for an HTPP request/response.
Request: method, HTTP version, URL, headers.
Response: HTTP version, Response status code, headers.

Request headers:
    :authority: developer.mozilla.org
    :method: GET
    :path: /en-US/docs/Web/API/URL
    :scheme: https
    accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
    accept-encoding: gzip, deflate, br
    accept-language: en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7,uk-UA;q=0.6,uk;q=0.5
    ...

Responce headers: 
    content-type: image/svg+xml
    date: Wed, 30 Jun 2021 02:39:03 GMT
    ...

What are the processes that happen when you type “http://somesite.com/some/page.html” into a browser?

1. Turn “somesite.com” into IP address 
2. Connect to this IP address
3. On port 80, using the HTTP protocol, ask for /some/page.html


Part Two: Practice Tools
***************************************************************************

Using curl, make a GET request to the icanhazdadjoke.com API to find all jokes involving the word “pirate”
curl https://icanhazdadjoke.com/search?term=pirate


Use dig to find what the IP address is for icanhazdadjoke.com: 
    104.21.37.176


Make a simple web page and serve it using python3 -m http.server. Visit the page in a browser.
    127.0.0.1 - - [01/Jul/2021 16:15:36] "GET /howWebWorks.html HTTP/1.1" 200 -



Part Three: Explore Dev Tools
****************************************************************************
Build a very simple HTML form that uses the GET method (it can use the same page URL for the action) when the form is submitted.

Add a field or two to the form and, after submitting it, explore in Chrome Developer tools how you can view the request and response headers.

Edit the page to change the form type to POST, refresh in the browser and re-submit. Do you still see the field in the query string? Explore in Chrome how you can view the request and response headers, as well as the form data.


Part Four: Explore the URL API
******************************************************************************

At times, it’s useful for your JavaScript to look at the URL of the browser window and change how the script works depending on parts of that (particularly the query string).

Read about the URL API

Try some of the code examples in the Chrome Console so that you can get comfortable with the basic methods and properties for instances of the URL class.